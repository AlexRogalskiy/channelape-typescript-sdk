name: CI/CD

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        # SONARCLOUD: Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: Use Node.js 8.10.0
      uses: actions/setup-node@v2
      with:
        node-version: 8.10.0
        cache: 'npm'
    - run: npm install
    - run: npm run build --if-present
    - run: npm test
    - name: Run e2e tests
      run: npm run e2e
      env:
        CHANNEL_APE_SESSION_ID: ${{ secrets.CHANNEL_APE_SESSION_ID }}
    - name: Get branch name
      id: branch-name
      uses: tj-actions/branch-names@v4.9
      
    - name: Running on the default branch.
      if: steps.branch-name.outputs.is_default == 'true'
      run: |
        echo "Running on default: ${{ steps.branch-name.outputs.current_branch }}"
        BRANCH_NAME=steps.branch-name.outputs.current_branch
    
    - name: Running on a pull request branch.
      if: steps.branch-name.outputs.is_default == 'false'
      run: |
        echo "Running on pr: ${{ steps.branch-name.outputs.current_branch }}"
        BRANCH_NAME=steps.branch-name.outputs.current_branch
    - name: SonarCloud Setup
      run: |
        PACKAGE_VERSION=$(cat package.json \
          | grep version \
          | head -1 \
          | awk -F: '{ print $2 }' \
          | sed 's/[",]//g' \
          | tr -d '[[:space:]]')
        ([[ ${BRANCH_NAME:0:8} = feature/ ]] || [[ ${BRANCH_NAME:0:7} = develop ]]) && SONAR_TARGET=develop || SONAR_TARGET=master
        echo "Branch: ${BRANCH_NAME}"
        echo "Sonar Target: ${SONAR_TARGET}"
        echo "Package Version: ${PACKAGE_VERSION}"
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      with:
        args: >
          -Dsonar.projectVersion=$PACKAGE_VERSION
          -Dsonar.branch.name=$BRANCH_NAME
          -Dsonar.branch.target=$SONAR_TARGET
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    
    - name: NPM Publish
      id: publish
      uses: JS-DevTools/npm-publish@v1
      with:
          token: ${{ secrets.NPM_TOKEN }}
    - if: steps.publish.outputs.type != 'none'
      run: |
        echo "Version changed: ${{ steps.publish.outputs.old-version }} => ${{ steps.publish.outputs.version }}"
